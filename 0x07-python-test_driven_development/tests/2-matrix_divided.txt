========================================================================
'Test for 2-matrix_divided module'
========================================================================
'Funtion to test:   matrix_divided()'
========================================================================

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

'positive integer values'
>>> matrix_divided([[1, 2, 3],[4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

'negative integer values'
>>> matrix_divided([[-1, -2, -3],[-4, -5, -6]], 3) 
[[-0.33, -0.67, -1.0], [-1.33, -1.67, -2.0]]

'div is negative value'
>>> matrix_divided([[1, 2, 3],[4, 5, 6]], -3)
[[-0.33, -0.67, -1.0], [-1.33, -1.67, -2.0]]

'div is a string'
>>> matrix_divided([[1, 2, 3],[4, 5, 6]], "sam")
Traceback (most recent call last):
...
TypeError: div must be a number

'Matrix[0] is a string'
>>> matrix_divided([["Sam"],[4, 5, 6]], 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

'Matrix[1] is a string'
>>> matrix_divided([["sam"],[4, 5, 6]], 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

'Matrix[0] != Matrix[1'
>>> matrix_divided([[1,2],[4, 5, 6]], 3)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size
